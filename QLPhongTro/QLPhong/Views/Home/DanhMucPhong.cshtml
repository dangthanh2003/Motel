@using QLPhong.Models
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<Phong>;

@{
    ViewData["Title"] = "DanhMucPhong";
    Layout = "~/Views/Shared/_LayoutRoom.cshtml";
}
<!-- Đường dẫn đến thư viện jQuery,Lightbox -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<style>
    /* Định dạng màu nền cho trang */
    body {
        background-color: #B0E0E6;
    }
</style>


<a href="@Url.Action("AddRoom")" class="btn btn-primary">Thêm phòng</a>
@if (ViewData["err"] != null)
{
    <div class="alert alert-danger">
        @ViewData["err"]
    </div>
}
@if (ViewData["success"] != null)
{
    <div class="alert alert-success">
        @ViewData["success"]
    </div>
}
<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Search", "Home", FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="form-group">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Tìm theo số phòng" })
            </div>

            <div class="form-group">
                @Html.DropDownList("daThue", new SelectList(new List<SelectListItem>
            {
            new SelectListItem { Text = "Đã thuê", Value = "True" },
            new SelectListItem { Text = "Chưa thuê", Value = "False" },

            }, "Value", "Text"), "Tất cả", new { @class = "form-control" })
            </div>

            <button type="submit" class="btn btn-primary">Tìm kiếm</button>
        }
    </div>
</div>

<table class="table table-striped">
    <thead class="thead-dark">
        <tr>
            <th>Số Phòng</th>
            <th>Loại Phòng</th>
            <th>Giá Thuê Tháng</th>
            <th>Trạng Thái</th>
            <th>Hình Ảnh</th>
            <th>Thao Tác</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.SoPhong)</td>
                <td>@Html.DisplayFor(modelItem => item.LoaiPhong)</td>
                <td>@Html.DisplayFor(modelItem => item.GiaThueThang)</td>

                <td>
                    @if (item.DaThue)
                    {
                        <span class="badge badge-success">Đã Thuê</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">Chưa Thuê</span>
                    }
                </td>

                <td>
                    <a href="@Url.Content("~/Anh/" + item.ImageUrl)" data-lightbox="image-gallery" data-title="Ảnh Phóng To">
                        <img src="@Url.Content("~/Anh/" + item.ImageUrl)" alt="Hình Ảnh" width="100" height="100" />
                    </a>
                </td>

                <td>
                    <a href="@Url.Action("EditRoom", new { id = item.MaPhong })" class="btn btn-info">
                        <i class="fas fa-edit"></i> <!-- Biểu tượng sửa -->
                    </a> |
                    <a href="@Url.Action("DetailsRoom", new { id = item.MaPhong })" class="btn btn-info">
                        <i class="fas fa-info-circle"></i> <!-- Biểu tượng xem chi tiết -->
                    </a> |
                    <a href="@Url.Action("TinhTienPhong", new { maPhong = item.MaPhong })" class="btn btn-info">
                        <i class="fas fa-calculator"></i> <!-- Biểu tượng tính tiền -->
                    </a> |
                    <a href="@Url.Action("DeleteRoom", new { id = item.MaPhong })" class="btn btn-danger delete-room" data-toggle="modal" data-target="#confirmDeleteModal">
                        <i class="fas fa-trash-alt"></i> <!-- Biểu tượng xóa -->
                    </a>
                </td>

            </tr>
        }
    </tbody>
</table>

@{
    var pagedListRenderOptions = new PagedListRenderOptions
            {
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
                LinkToFirstPageFormat = "First",
                LinkToPreviousPageFormat = "Previous",
                LinkToNextPageFormat = "Next",
                LinkToLastPageFormat = "Last",
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always
            };
}

@Html.PagedListPager(Model, page => Url.Action("DanhMucPhong", new { page = page }), pagedListRenderOptions)
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Xác nhận xóa phòng</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Những dữ liệu liên quan sẽ bị xóa sạch và sẽ không thể khôi phục. Bạn có chắc chắn muốn xóa phòng này?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <a href="#" class="btn btn-danger" id="confirmDeleteButton">Xóa</a>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Xử lý sự kiện khi người dùng nhấp ra bên ngoài lightbox
        $(document).on('click', '.ekko-lightbox', function (e) {
            // Đóng lightbox khi nhấp ra bên ngoài
            if ($(e.target).hasClass('ekko-lightbox')) {
                $(this).modal('hide');
            }
        });

        // Xử lý sự kiện khi người dùng nhấp vào nút xóa phòng
        $('.delete-room').click(function (e) {
            e.preventDefault();
            var deleteUrl = $(this).attr('href');
            $('#confirmDeleteButton').attr('href', deleteUrl);
            $('#confirmDeleteModal').modal('show');
        });
    });
</script>
